<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a class="Link--inTextBlock" href="https://mdecd2025.github.io/hw-41223150/">https://mdecd2025.github.io/hw-41223150/</a></p>
<p>學員作業倉儲:<a href="https://github.com/mdecd2025/hw-41223150">https://github.com/mdecd2025/hw-41223150</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<h1>List</h1>
<p><a href="https://mdecd2025.github.io/hw-41223150/content/Brython.html?src=https://gist.githubusercontent.com/41223150/d59c9a70d5d60be2ef047de2683b0880/raw/8604983dd504d53e9bd7c50cb44b4982e5c0d9dd/2a-g5" title="2a-g5">2a-g5</a></p>
<h1>Week</h1>
<h2>W1</h2>
<h2>W2</h2>
<h2>W3</h2>
<p><span>將本班未納入分組名單的名單</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
   
# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)</pre>
<p><span></span></p><h2>W5</h2>
<p><span style="background-color: #ffff00;">整理完的英文單字與文法</span></p>
<p>1. **Webots 是什麼？** <br/> Webots 是一個由 Cyberbotics Ltd. 開發的免費、open-source 的 3D robot simulator。它被用於工業、教育和研究中，用來 model、program 和 simulate robots。</p>
<p>2. **我可以用 Webots 做什麼？** <br/> 你可以 design 和 simulate robots（例如輪式、腿式或飛行式 robots），用 C、C++、Python 或 Java 等語言 program 它們的行為，測試 sensors 和 actuators，甚至將 programs 轉移到真實 robots 上。</p>
<p>3. **使用 Webots 我需要知道什麼？** <br/> 你需要基本的 robotics knowledge（例如 robots 如何移動或感知），在 supported language（如 Python 或 C++）中的 programming skills，以及對 3D simulation concepts（如 physics 或 object properties）的理解。</p>
<p>4. **我如何獲得 User Support？** <br/> 你可以通過 Webots 網站（cyberbotics.com）、它的 user guide、線上論壇、GitHub discussions 或直接聯繫 Cyberbotics 來獲得 support。</p>
<p>5. **Webots Simulation：什麼是 World？** <br/> 在 Webots 中，一個 “world” 是一個 virtual 3D environment，裡面有 robots 和 objects。它包括像 gravity 這樣的 physical properties，並定義了 simulation 的空間。</p>
<p>6. **什麼是 Controller？** <br/> Controller 是一個 program，用來 control robot 在 Webots 中的 actions。它用 programming language 編寫，告訴 robot 如何 move、sense 或 react。</p>
<p>7. **什麼是 Supervisor Controller？** <br/> Supervisor Controller 是 Webots 中一種特別的 controller，擁有額外的 powers。它可以 manage simulation、move objects、reset world，或 access 普通 controllers 無法獲得的 data。</p>
<p>---</p>
<p>### 重要單字與用法（Key Vocabulary and Usage）</p>
<p>| **Word** | **Part of Speech** | **Definition (定義)** | **Example Sentence (例句)** |<br/>|---------------------|--------------------|-------------------------------------|-------------------------------------------------------------------------------|<br/>| **Simulator** | Noun | 模擬真實世界過程的工具 | "Webots is a simulator for testing robot designs." |<br/>| **Open-source** | Adjective | 可自由使用或修改的軟體 | "Webots is open-source, so anyone can contribute to it." |<br/>| **Model** | Verb | 創建某物的表徵 | "You can model a robot’s shape in Webots." |<br/>| **Program** | Verb | 為電腦編寫指令 | "I program my robot to avoid obstacles." |<br/>| **Robot** | Noun | 可編程的自動化機器 | "The robot in Webots can walk or fly." |<br/>| **Sensor** | Noun | 檢測環境變化的裝置 | "The robot uses a sensor to find walls." |<br/>| **Actuator** | Noun | 引起動作的裝置 | "An actuator makes the robot’s arm lift." |<br/>| **Knowledge** | Noun | 對某主題的理解或資訊 | "You need knowledge of programming to use Webots." |<br/>| **Support** | Noun | 幫助或協助 | "The Webots website offers great support for users." |<br/>| **Virtual** | Adjective | 以數位形式存在，非實體的 | "A virtual world in Webots feels real." |<br/>| **Environment** | Noun | 周圍環境或條件 | "The environment in Webots includes trees and robots." |<br/>| **Controller** | Noun | 管理動作的程序或裝置 | "The controller tells the robot what to do." |<br/>| **Supervisor** | Noun | 監督者或監督事物 | "A supervisor controller can reset the simulation." |<br/>| **Manage** | Verb | 控制或處理某事物 | "The supervisor manages the entire world in Webots." |<br/>| **Access** | Verb | 獲取或使用某事物 | "It can access data other controllers cannot." |</p>
<p>---</p>
<p>### 您的問題文法分析</p>
<p>以下是您問題的文法分析，保留英文單字並解釋其用法：</p>
<p>1. **What is Webots?** <br/> - **結構**: 簡單現在時，疑問句 <br/> - **What**: 疑問代詞，詢問定義或描述。 <br/> - **Is**: 助動詞 (to be)，現在時，第三人稱單數。 <br/> - **Webots**: 專有名詞，主語。 <br/> - **說明**: 這是一個基本的 "What is X?" 問題，用來定義某事物。</p>
<p>2. **What can I do with Webots?** <br/> - **結構**: 情態動詞 + 基礎動詞，疑問句 <br/> - **What**: 疑問代詞，詢問可能性。 <br/> - **Can**: 情態動詞，表示能力或潛力。 <br/> - **I**: 第一人稱單數代詞，主語。 <br/> - **Do**: 基礎動詞，主要動作。 <br/> - **With Webots**: 介詞短語，指定工具。 <br/> - **說明**: 情態詞 "can" 用來詢問能力，與 "do" 搭配表示一般動作。</p>
<p>3. **What do I need to know to use Webots?** <br/> - **結構**: 現在時帶不定式從句，疑問句 <br/> - **What**: 疑問代詞，詢問需求。 <br/> - **Do**: 助動詞，現在時，與 "I" 搭配。 <br/> - **I**: 主語。 <br/> - **Need**: 主要動詞，表示必要性。 <br/> - **To know**: 不定式動詞，表示 "need" 的目的。 <br/> - **To use Webots**: 不定式從句，解釋目標。 <br/> - **說明**: "Do I need" 是詢問需求的常見結構，後接不定式從句表示目的。</p>
<p>4. **How do I get User Support?** <br/> - **結構**: 現在時，疑問句 <br/> - **How**: 疑問副詞，詢問方法。 <br/> - **Do**: 助動詞，現在時。 <br/> - **I**: 主語。 <br/> - **Get**: 主要動詞，表示獲得。 <br/> - **User Support**: 複合名詞，直接賓語。 <br/> - **說明**: "How do I" 是詢問指示或過程的典型方式。</p>
<p>5. **Webots Simulation: What is a World?** <br/> - **結構**: 簡單現在時，疑問句帶標籤 <br/> - **Webots Simulation**: 名詞短語，作為標題或上下文（不屬於句子文法部分）。 <br/> - **What**: 疑問代詞。 <br/> - **Is**: 助動詞 (to be)，現在時。 <br/> - **A World**: 名詞短語，帶不定冠詞 "a"，主語補語。 <br/> - **說明**: 類似問題 1，但 "Webots Simulation" 是主題標籤。</p>
<p>6. **What is a Controller?** <br/> - **結構**: 簡單現在時，疑問句 <br/> - **What**: 疑問代詞。 <br/> - **Is**: 助動詞 (to be)。 <br/> - **A Controller**: 名詞短語，帶不定冠詞 "a"。 <br/> - **說明**: 與問題 1 結構相同，詢問定義。</p>
<p>7. **What is a Supervisor Controller?** <br/> - **結構**: 簡單現在時，疑問句 <br/> - **What**: 疑問代詞。 <br/> - **Is**: 助動詞 (to be)。 <br/> - **A Supervisor Controller**: 名詞短語，帶不定冠詞 "a"，複合名詞。 <br/> - **說明**: 與問題 6 相同，但使用了更具體的複合名詞。</p>
<p>---</p>
<p>### 我的回答文法分析</p>
<p>以下是我的回答文法分析，保留英文單字並解釋其用法：</p>
<p>1. **Webots is a free, open-source 3D robot simulator developed by Cyberbotics Ltd.** <br/> - **結構**: 簡單現在時，陳述句 <br/> - **Webots**: 主語，專有名詞。 <br/> - **Is**: 連繫動詞 (to be)，現在時。 <br/> - **A free, open-source 3D robot simulator**: 名詞短語，主語補語，帶形容詞 ("free," "open-source," "3D") 修飾 "simulator"。 <br/> - **Developed by Cyberbotics Ltd.**: 過去分詞短語，描述 "simulator"。 <br/> - **說明**: 用連繫動詞定義 Webots，並用分詞短語增加細節。</p>
<p>2. **You can design and simulate robots…** <br/> - **結構**: 情態動詞 + 基礎動詞，陳述句 <br/> - **You**: 第二人稱代詞，主語。 <br/> - **Can**: 情態動詞，表示能力。 <br/> - **Design and simulate**: 並列動詞，主要動作。 <br/> - **Robots**: 直接賓語。 <br/> - **說明**: "Can" 表示可能性，動詞用 "and" 連接形成列表。</p>
<p>3. **You need basic knowledge of robotics…** <br/> - **結構**: 簡單現在時，陳述句 <br/> - **You**: 主語。 <br/> - **Need**: 主要動詞，表示必要性。 <br/> - **Basic knowledge of robotics**: 名詞短語，直接賓語，"basic" 為形容詞。 <br/> - **說明**: 用 "need" 表示需求的簡單陳述。</p>
<p>4. **You can get support through the Webots website…** <br/> - **結構**: 情態動詞 + 基礎動詞，陳述句 <br/> - **You**: 主語。 <br/> - **Can**: 情態動詞。 <br/> - **Get**: 主要動詞。 <br/> - **Support**: 直接賓語。 <br/> - **Through the Webots website**: 介詞短語，解釋方式。 <br/> - **說明**: 類似回答 2，增加了介詞短語說明方法。</p>
<p>5. **In Webots, a “world” is a virtual 3D environment…** <br/> - **結構**: 簡單現在時，陳述句 <br/> - **In Webots**: 介詞短語，提供上下文。 <br/> - **A “world”**: 主語，名詞短語，引號強調。 <br/> - **Is**: 連繫動詞。 <br/> - **A virtual 3D environment**: 名詞短語，補語，帶形容詞 ("virtual," "3D")。 <br/> - **說明**: 用連繫動詞定義 "world"，並用形容詞描述。</p>
<p>6. **A controller is a program that controls a robot’s actions…** <br/> - **結構**: 簡單現在時，陳述句 <br/> - **A controller**: 主語，名詞短語。 <br/> - **Is**: 連繫動詞。 <br/> - **A program**: 名詞短語，補語。 <br/> - **That controls a robot’s actions**: 關係從句，描述 "program" (關係代詞 "that" + 動詞 "controls")。 <br/> - **說明**: 用關係從句為定義增加細節。</p>
<p>7. **A supervisor controller is a special type of controller…** <br/> - **結構**: 簡單現在時，陳述句 <br/> - **A supervisor controller**: 主語，複合名詞短語。 <br/> - **Is**: 連繫動詞。 <br/> - **A special type of controller**: 名詞短語，補語，"special" 為形容詞。 <br/> - **說明**: 類似回答 6，但用形容詞 ("special") 替代關係從句。</p>
<p>---</p>
<p>### 總結</p>
<p>- **單字**: 重點在 robotics（例如 "robot," "sensor"）、programming（例如 "program," "controller"）和 simulation（例如 "simulator," "virtual"）。 <br/>- **文法**: 您的問題使用疑問結構（"What," "How"）搭配現在時動詞（"is," "do"）。我的回答使用陳述句，包含連繫動詞（"is"）、情態動詞（"can"）和描述性短語（例如關係從句、介詞短語）。 <br/>- **關鍵模式**: "What is X?" 用於定義，"What can I do?" 用於能力，"How do I…?" 用於方法。</p>
<p></p><h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p>檔案:<a href="/downloads/41223150-hw1.zip">41223150-hw1.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/79zPFfhkuoE?si=yO79UP0uRh5qH-hf" title="YouTube video player" width="560"></iframe></p><h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p></p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>各週網頁內容:</p>
<p>期中心得:</p>
<p>期中自評影片:</p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p></p>
<p>題目：</p>
<p>其中紅色連桿為主動旋轉, 其旋轉速度設為 1.0 rad/s, 紅色連桿長度為 0.4m, 綠色連桿長度為 0.6m (短桿長度為 0.3m 基座位於長桿中央且與基座長桿重疊, ), 藍色連桿長度為 0.9m, 紅色連桿與藍色連桿距離則為 1m.</p>
<p>請學員將考試操作流程紀錄於作業網站中的 Exam1 頁面中, 並完成下列要求:</p>
<ol>
<li>請詳細說明各連桿的製作流程, 利用 Solvespace 繪製當紅色連桿旋轉角度為個人學號最後兩碼時 (單位為 degree) 的線架構圖, 並將此角度作為四連桿的起始旋轉角度.</li>
<li>完成後, 請以"<span><span style="background-color: #ff0000;">國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</span>" 作為操作影片標題, 上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 Exam1 頁面紀錄相關過程與心得.</span><span></span></li>
</ol>
<p><span></span>檔案:<a href="/downloads/41223150-Exam1.zip">41223150-Exam1.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/7oqPKqFNKzc?si=abunba_0VZKI4fqy" title="YouTube video player" width="560"></iframe></p><h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 -41223150</p>
<p>客戶端：</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Y2WRp0VxeCw?si=-L7DwFESL4Z4q1FN" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p>七段顯示器:</p>
<p></p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/y9SSCOC408g?si=KXy1GWAO8nKFCBkW" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p>car:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/X0hGXeb_s9A" width="560"></iframe></p><h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>